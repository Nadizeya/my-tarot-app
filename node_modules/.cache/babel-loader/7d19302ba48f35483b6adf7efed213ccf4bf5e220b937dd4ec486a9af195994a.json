{"ast":null,"code":"var _jsxFileName = \"/home/nadi/personal_projects/my-tarot-app/src/components/card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport carddata from '../carddata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const cardarrays = carddata.datas;\n  const [readingarray, UpdateMyArray] = useState([{\n    id: 28,\n    name: \"swordman\",\n    value: 7\n  }]);\n  function CardKnow() {\n    cardarrays.find(card => card.id === props.id);\n  }\n  ;\n  function AddingReading() {\n    UpdateMyArray(readingarray => {\n      return [...readingarray, {\n        CardKnow\n      }];\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    onClick: () => {\n      CardKnow();\n      AddingReading();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"Hcq6OUqic+dSTXhj1SRmsOKVP8s=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","carddata","Card","props","cardarrays","datas","readingarray","UpdateMyArray","id","name","value","CardKnow","find","card","AddingReading"],"sources":["/home/nadi/personal_projects/my-tarot-app/src/components/card.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '../App.css';\nimport carddata from '../carddata';\n\nfunction Card(props) {\n\n  const cardarrays = carddata.datas;\n  const [readingarray , UpdateMyArray] = useState([{id: 28, name: \"swordman\", value: 7}]);\n \n  function CardKnow(){\n        cardarrays.find(card => card.id === props.id);   \n    };\n\n    function AddingReading(){\n        UpdateMyArray(readingarray => {\n            return [...readingarray, {CardKnow}]\n        })\n    }\n    \n   \n  return (\n    <div className=\"card\" onClick={() => {\n          CardKnow();\n          AddingReading();\n        }}> \n      \n    </div>\n  );\n}\n\nexport default Card; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,aAAa;AAAC;AAEnC,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EAEnB,MAAMC,UAAU,GAAGH,QAAQ,CAACI,KAAK;EACjC,MAAM,CAACC,YAAY,EAAGC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC;IAACQ,EAAE,EAAE,EAAE;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAC,CAAC,CAAC,CAAC;EAEvF,SAASC,QAAQ,GAAE;IACbP,UAAU,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,EAAE,KAAKL,KAAK,CAACK,EAAE,CAAC;EACjD;EAAC;EAED,SAASM,aAAa,GAAE;IACpBP,aAAa,CAACD,YAAY,IAAI;MAC1B,OAAO,CAAC,GAAGA,YAAY,EAAE;QAACK;MAAQ,CAAC,CAAC;IACxC,CAAC,CAAC;EACN;EAGF,oBACE;IAAK,SAAS,EAAC,MAAM;IAAC,OAAO,EAAE,MAAM;MAC/BA,QAAQ,EAAE;MACVG,aAAa,EAAE;IACjB;EAAE;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV;AAAC,GAxBQZ,IAAI;AAAA,KAAJA,IAAI;AA0Bb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}